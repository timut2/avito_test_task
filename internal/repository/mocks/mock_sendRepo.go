// Code generated by MockGen. DO NOT EDIT.
// Source: D:/vscodeprojects/golang/avito_test/internal/repository/sendRepo.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/timut2/avito_test_task/internal/models"
)

// MockSendRepo is a mock of SendRepo interface.
type MockSendRepo struct {
	ctrl     *gomock.Controller
	recorder *MockSendRepoMockRecorder
}

// MockSendRepoMockRecorder is the mock recorder for MockSendRepo.
type MockSendRepoMockRecorder struct {
	mock *MockSendRepo
}

// NewMockSendRepo creates a new mock instance.
func NewMockSendRepo(ctrl *gomock.Controller) *MockSendRepo {
	mock := &MockSendRepo{ctrl: ctrl}
	mock.recorder = &MockSendRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSendRepo) EXPECT() *MockSendRepoMockRecorder {
	return m.recorder
}

// Send mocks base method.
func (m *MockSendRepo) Send(userId int, req models.SendCoinRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", userId, req)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockSendRepoMockRecorder) Send(userId, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockSendRepo)(nil).Send), userId, req)
}
